//
// Purpur Tentakel
// 17.03.2024
// This is a generated file. Do not edit this file.
//

#pragma once

#include <alias/AliasUtils.hpp>
#include <string>


namespace app {
    class G_Global final {
    private:
        static inline utl::usize constexpr s_save_section_count = 1;
        static inline utl::usize constexpr s_total_save_entry_count = 6;
        static inline utl::usize constexpr s_load_save_entry_count = 2;
        std::string m_game_version;
        std::string m_save_version;

    public:
        G_Global(std::string game_version,
                std::string save_version)
            : m_game_version{ std::move(game_version) },
                m_save_version{ std::move(save_version) } {}

        [[nodiscard]] utl::usize get_save_section_count() const {
            return s_save_section_count;
        }
        [[nodiscard]] utl::usize get_total_save_entry_count() const {
            return s_total_save_entry_count;
        }
        [[nodiscard]] utl::usize get_load_save_entry_count() const {
            return s_load_save_entry_count;
        }
        [[nodiscard]] std::string get_game_version() const {
            return m_game_version;
        }
        [[nodiscard]] std::string get_save_version() const {
            return m_save_version;
        }

        void set_game_version(std::string value) {
            m_game_version = std::move(value);
        }
        void set_save_version(std::string value) {
            m_save_version = std::move(value);
        }
    };

} // namespace app
