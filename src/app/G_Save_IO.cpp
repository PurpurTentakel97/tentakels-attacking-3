//
// Purpur Tentakel
// 24.03.2024
// This is a generated file. Do not edit this file.
//

#include <nlohmann/json.hpp>
#include <helper/SaveLoadFile.hpp>
#include "G_Save_IO.hpp"
#include "HelperSaveIO.hpp"


namespace app {
    void G_Save_IO::LoadGame(utl::SaveState& saveState, std::string const& dir, std::string const& file) {
        nlohmann::json load{};
        utl::usize currentEntryCount{};
        auto const result = LoadAndValidateSaveJson(load, currentEntryCount, dir, file);
        if (not result) { return; }
        // enter file loop here
    }

    void G_Save_IO::SaveGame(utl::SaveState const& saveState, std::string const& dir, std::string const& file) {
        nlohmann::json save{};

        save[SToS(utl::G_Save_Enum::G_SAVE_VERSION)] = {
            { SToS(utl::G_Save_Enum::G_SAVE_VERSION_TOTAL_SAVE_ENTRY_COUNT), saveState.g_save_version.get_total_save_entry_count() },
            { SToS(utl::G_Save_Enum::G_SAVE_VERSION_LOAD_SAVE_ENTRY_COUNT), saveState.g_save_version.get_load_save_entry_count() },
            { SToS(utl::G_Save_Enum::G_SAVE_VERSION_GAME_VERSION), saveState.g_save_version.get_game_version() },
            { SToS(utl::G_Save_Enum::G_SAVE_VERSION_SAVE_GAME_VERSION), saveState.g_save_version.get_save_game_version() },
        };
        hlp::SaveFile(dir, file, save.dump(4));
    }

} // namespace app
